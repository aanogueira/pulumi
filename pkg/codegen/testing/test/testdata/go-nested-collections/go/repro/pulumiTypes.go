// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package repro

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Bar struct {
	Prop *string `pulumi:"prop"`
}

type BarArrayArrayOutput struct{ *pulumi.OutputState }

func (BarArrayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[][][]Bar)(nil)).Elem()
}

func (o BarArrayArrayOutput) ToBarArrayArrayOutput() BarArrayArrayOutput {
	return o
}

func (o BarArrayArrayOutput) ToBarArrayArrayOutputWithContext(ctx context.Context) BarArrayArrayOutput {
	return o
}

func (o BarArrayArrayOutput) Index(i pulumi.IntInput) BarArrayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) [][]Bar {
		return vs[0].([][][]Bar)[vs[1].(int)]
	}).(BarArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(BarArrayArrayOutput{})
}
